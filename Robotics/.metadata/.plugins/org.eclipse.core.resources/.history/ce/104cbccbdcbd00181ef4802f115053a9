import lejos.hardware.sensor.*;
import lejos.hardware.ev3.LocalEV3;
import lejos.hardware.port.*;
import lejos.hardware.Button;
import lejos.hardware.lcd.LCD;
import lejos.hardware.motor.Motor;
import lejos.hardware.motor.NXTRegulatedMotor;
import lejos.hardware.Sound;
import lejos.utility.Delay;
import lejos.robotics.*;
import lejos.robotics.navigation.DifferentialPilot;


public class Project1 {


	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		// Initialization of sensors and motors
		NXTRegulatedMotor leftWheel = Motor.A;
		NXTRegulatedMotor rightWheel = Motor.D;
		Port port = LocalEV3.get().getPort("S1");
		EV3UltrasonicSensor eyes = new EV3UltrasonicSensor(port);
		twoMotors wheels = new twoMotors(leftWheel,rightWheel);
		Motor.A.setSpeed(500);
		Motor.D.setSpeed(500);
		// Thread or process handling Navigation
		Navigate(eyes,wheels);
		
		
	}
	public static void Navigate(EV3UltrasonicSensor eyes, twoMotors wheels){
		float [] sample = new float [eyes.sampleSize()];
		float[] lookLeft = new float [eyes.sampleSize()];
		float [] lookRight = new float [eyes.sampleSize()];
		eyes.fetchSample(sample, 0);
		while((Button.getButtons() != Button.ID_ESCAPE)){    // Initial State
			eyes.fetchSample(sample, 0);
			
			if(sample[0] < .4){
				wheels.leftTurn();
				Delay.msDelay(2000);
				eyes.fetchSample(lookLeft, 0);
				wheels.turnAround();
				Delay.msDelay(2000);
				eyes.fetchSample(lookRight, 0);
				
				
				Delay.msDelay(1000);
				// compare and decide which way to go.
				if ( lookLeft[0] < lookRight [0] ){
					wheels.turnAround();
					Delay.msDelay(1000);
					
				} else{
				}
				wheels.forward();
				
			}
			wheels.forward();
		}
		
		
		
	}

}
