import lejos.hardware.motor.Motor;
import lejos.hardware.motor.NXTRegulatedMotor;
import lejos.utility.Delay;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;

import lejos.hardware.Bluetooth;
import lejos.remote.nxt.NXTCommConnector;
import lejos.remote.nxt.NXTConnection;

public class Project1 {

	static NXTRegulatedMotor leftWheel = Motor.A;
	static NXTRegulatedMotor rightWheel = Motor.D;
	static twoMotors wheels = new twoMotors(leftWheel, rightWheel);

	/**
	 * @param args
	 * @throws IOException
	 */
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		NXTCommConnector connector = Bluetooth.getNXTCommConnector();

		System.out.println("Waiting for connection ...");
		NXTConnection con = connector.waitForConnection(0, NXTConnection.RAW);
		System.out.println("Connected");

		DataInputStream dis = con.openDataInputStream();
		DataOutputStream dos = con.openDataOutputStream();
		Motor.A.setSpeed(600);
		Motor.D.setSpeed(600);

		byte[] n = new byte[8];
		while (true) {
			try {
				if (dis.read(n) == -1)
					break;
			} catch (EOFException e) {
				break;
			}
			try {
				System.out.println("Read " + n[0] + n[1] + n[2] + n[3] + n[4]
						+ n[5] + n[6] + n[7]);
				Navigate(n[0]);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			dos.write(n);

			dos.flush();
		}

		Delay.msDelay(1000);

		dis.close();
		dos.close();
		con.close();

		// Thread or process handling Navigation

	}

	public static void Navigate(byte num) {

		if (num == 0) {
			wheels.forward();

		} else if (num == 1) {
			wheels.leftTurn();
		} else if (num == 2) {
			wheels.rightTurn();
		} else if (num == 3){
			wheels.backUp();
		}
	}

}
